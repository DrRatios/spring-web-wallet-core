version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: wallet-db
    build: .
    env_file: .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d  # Отдельная папка для миграций
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-wallet_user} -d ${DB_NAME:-wallet_db}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - wallet-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
      restart_policy:
        condition: on-failure

  wallet-service:
    build: .
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL-AUTO: validate
      SPRING_JPA_SHOW_SQL: ${SPRING_JPA_SHOW_SQL}
      SPRING_LIQUIBASE_ENABLED: ${SPRING_LIQUIBASE_ENABLED}
    ports:
      - "8080:8080"
    networks:
      - wallet-network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
      restart_policy:
        condition: on-failure

volumes:
  postgres_data:

networks:
  wallet-network:
    driver: bridge